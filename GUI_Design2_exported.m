classdef GUI_Design2_exported < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        UIFigure                matlab.ui.Figure
        TargetAngleButtonGroup  matlab.ui.container.ButtonGroup
        Section1Button          matlab.ui.control.RadioButton
        Section2Button          matlab.ui.control.RadioButton
        Section3Button          matlab.ui.control.RadioButton
        GenerateSoundButton     matlab.ui.control.Button
        TargetRangeButtonGroup  matlab.ui.container.ButtonGroup
        RangeSpan1Button        matlab.ui.control.RadioButton
        RangeSpan2Button        matlab.ui.control.RadioButton
        RangeSpan3Button        matlab.ui.control.RadioButton
        Image                   matlab.ui.control.Image
        UIAxes                  matlab.ui.control.UIAxes
    end

    % Callbacks that handle component events
    methods (Access = private)

        % Button pushed function: GenerateSoundButton
        function GenerateSoundButtonPushed(app, event)
            % % Writing Code - To create code and control what each button in the GUI
            % does, right click the button on the GUI and create a callback
            % ,this creates a function in "Code View",i.e., similar to the
            % code that's below generated by right clicking the "Generate
            % Sound" button on the GUI.
            % % Plots - to insert graph data, "app.UIAxes" is what you're
            % plotting to. In this case, a scatter plot is being made, and M(:,2) 
            % is my x axis and M(:,2) is my y axis
            
            syms a b y Fs % establishing variables
            M = [0 -30;3 30;0 0;0 30;3 -30]; % establishing dimensions of plot (30 to -30 degrees and 0 to 3 meters)

            % % Code below plots values on the angle vs range graph and generates sound based
            % on what values of the pushbuttons are pushed or "true"
            if (app.Section1Button.Value == true) && (app.RangeSpan1Button.Value == true)
                M(3,1) = 1;
                M(3,2) = 20;
                scatter(app.UIAxes,M(:,1),M(:,2)) % in this case, M(:,2) is my x axis and M(:,2) is my y axis
            end
            if (app.Section2Button.Value == true) && (app.RangeSpan1Button.Value == true)
                M(3,1) = 1;
                M(3,2) = 0;
                scatter(app.UIAxes,M(:,1),M(:,2))
            end
            if (app.Section3Button.Value == true) && (app.RangeSpan1Button.Value == true)
                M(3,1) = 1;
                M(3,2) = -20;
                scatter(app.UIAxes,M(:,1),M(:,2))
            end
            if (app.Section1Button.Value == true) && (app.RangeSpan2Button.Value == true)
                M(3,1) = 2;
                M(3,2) = 20;
                scatter(app.UIAxes,M(:,1),M(:,2))
            end
            if (app.Section2Button.Value == true) && (app.RangeSpan2Button.Value == true)
                M(3,1) = 2;
                M(3,2) = 0;
                scatter(app.UIAxes,M(:,1),M(:,2))
            end
            if (app.Section3Button.Value == true) && (app.RangeSpan2Button.Value == true)
                M(3,1) = 2;
                M(3,2) = -20;
                scatter(app.UIAxes,M(:,1),M(:,2))
            end
            if (app.Section1Button.Value == true) && (app.RangeSpan3Button.Value == true)
                M(3,1) = 3;
                M(3,2) = 20;
                scatter(app.UIAxes,M(:,1),M(:,2))
            end
            if (app.Section2Button.Value == true) && (app.RangeSpan3Button.Value == true)
                M(3,1) = 3;
                M(3,2) = 0;
                scatter(app.UIAxes,M(:,1),M(:,2))
            end
            if (app.Section3Button.Value == true) && (app.RangeSpan3Button.Value == true)
                M(3,1) = 3;
                M(3,2) = -20;
                scatter(app.UIAxes,M(:,1),M(:,2))
            end
            
            % Sound
            if (app.Section1Button.Value == true) && (app.RangeSpan1Button.Value == true)
                [y,Fs] = audioread("68442__pinkyfinger__piano-d.wav");
                player = audioplayer(y,Fs);
                playblocking(player);
            end
            if (app.Section2Button.Value == true) && (app.RangeSpan1Button.Value == true)
                [y,Fs] = audioread("68443__pinkyfinger__piano-e.wav");
                player = audioplayer(y,Fs);
                playblocking(player)
            end
            if (app.Section3Button.Value == true) && (app.RangeSpan1Button.Value == true)
                [y,Fs] = audioread("68448__pinkyfinger__piano-g.wav");
                player = audioplayer(y,Fs);
                playblocking(player)
            end
            if (app.Section1Button.Value == true) && (app.RangeSpan2Button.Value == true)
                [y,Fs] = audioread("8388__speedy__clean-d-str-pick.wav");
                player = audioplayer(y,Fs);
                playblocking(player)
            end
            if (app.Section2Button.Value == true) && (app.RangeSpan2Button.Value == true)
                [y,Fs] = audioread("8396__speedy__clean-e-str-pick.wav");
                player = audioplayer(y,Fs);
                playblocking(player)
            end
            if (app.Section3Button.Value == true) && (app.RangeSpan2Button.Value == true)
                [y,Fs] = audioread("8402__speedy__clean-g-str-pick.wav");
                player = audioplayer(y,Fs);
                playblocking(player)
            end
            if (app.Section1Button.Value == true) && (app.RangeSpan3Button.Value == true)
                [y,Fs] = audioread("354671__mtg__flute-d4.wav");
                player = audioplayer(y,Fs);
                playblocking(player)
            end
            if (app.Section2Button.Value == true) && (app.RangeSpan3Button.Value == true)
                [y,Fs] = audioread("354657__mtg__flute-e4.wav");
                player = audioplayer(y,Fs);
                playblocking(player)
            end
            if (app.Section3Button.Value == true) && (app.RangeSpan3Button.Value == true)
                [y,Fs] = audioread("354646__mtg__flute-g5.wav");
                player = audioplayer(y,Fs);
                playblocking(player)
            end

        end
    end

    % Component initialization
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create UIFigure and hide until all components are created
            app.UIFigure = uifigure('Visible', 'off');
            app.UIFigure.Position = [100 100 668 547];
            app.UIFigure.Name = 'UI Figure';

            % Create TargetAngleButtonGroup
            app.TargetAngleButtonGroup = uibuttongroup(app.UIFigure);
            app.TargetAngleButtonGroup.TitlePosition = 'centertop';
            app.TargetAngleButtonGroup.Title = 'Target Angle';
            app.TargetAngleButtonGroup.Position = [521 142 133 106];

            % Create Section1Button
            app.Section1Button = uiradiobutton(app.TargetAngleButtonGroup);
            app.Section1Button.Text = 'Section 1';
            app.Section1Button.Position = [11 60 72 22];
            app.Section1Button.Value = true;

            % Create Section2Button
            app.Section2Button = uiradiobutton(app.TargetAngleButtonGroup);
            app.Section2Button.Text = 'Section 2';
            app.Section2Button.Position = [11 38 72 22];

            % Create Section3Button
            app.Section3Button = uiradiobutton(app.TargetAngleButtonGroup);
            app.Section3Button.Text = 'Section 3';
            app.Section3Button.Position = [11 16 72 22];

            % Create GenerateSoundButton
            app.GenerateSoundButton = uibutton(app.UIFigure, 'push');
            app.GenerateSoundButton.ButtonPushedFcn = createCallbackFcn(app, @GenerateSoundButtonPushed, true);
            app.GenerateSoundButton.Position = [431 96 104 22];
            app.GenerateSoundButton.Text = 'Generate Sound';

            % Create TargetRangeButtonGroup
            app.TargetRangeButtonGroup = uibuttongroup(app.UIFigure);
            app.TargetRangeButtonGroup.TitlePosition = 'centertop';
            app.TargetRangeButtonGroup.Title = 'Target Range';
            app.TargetRangeButtonGroup.Position = [361 142 133 106];

            % Create RangeSpan1Button
            app.RangeSpan1Button = uiradiobutton(app.TargetRangeButtonGroup);
            app.RangeSpan1Button.Text = 'Range Span 1';
            app.RangeSpan1Button.Position = [11 60 99 22];
            app.RangeSpan1Button.Value = true;

            % Create RangeSpan2Button
            app.RangeSpan2Button = uiradiobutton(app.TargetRangeButtonGroup);
            app.RangeSpan2Button.Text = 'Range Span 2';
            app.RangeSpan2Button.Position = [11 38 99 22];

            % Create RangeSpan3Button
            app.RangeSpan3Button = uiradiobutton(app.TargetRangeButtonGroup);
            app.RangeSpan3Button.Text = 'Range Span 3';
            app.RangeSpan3Button.Position = [11 16 99 22];

            % Create Image
            app.Image = uiimage(app.UIFigure);
            app.Image.Position = [121 288 410 250];
            app.Image.ImageSource = 'image.jpg';

            % Create UIAxes
            app.UIAxes = uiaxes(app.UIFigure);
            title(app.UIAxes, 'Title')
            xlabel(app.UIAxes, 'Range (m)')
            ylabel(app.UIAxes, 'Angle (degrees)')
            app.UIAxes.XTick = [0 0.5 1 1.5 2 2.5 3];
            app.UIAxes.XTickLabel = {'0'; '0.5'; '1'; '1.5'; '2'; '2.5'; '3'};
            app.UIAxes.YTick = [-35 -30 -25 -20 -15 -10 -5 0 5 10 15 20 25 30 35];
            app.UIAxes.YTickLabel = {'-35'; '-30'; '-25'; '-20'; '-15'; '-10'; '-5'; '0'; '5'; '10'; '15'; '20'; '25'; '30'; '35'};
            app.UIAxes.Position = [31 8 320 270];

            % Show the figure after all components are created
            app.UIFigure.Visible = 'on';
        end
    end

    % App creation and deletion
    methods (Access = public)

        % Construct app
        function app = GUI_Design2_exported

            % Create UIFigure and components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.UIFigure)

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.UIFigure)
        end
    end
end